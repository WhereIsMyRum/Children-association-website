---
swagger: "2.0"
info:
  description: "This is a simple CMS server for a non-profit underprivileged children\
    \ support organization, providing dynamic data for the simple website frontend,\
    \ with a contact form and newsletter signup funcionality."
  version: "1.0.0"
  title: "Children Association"
  contact:
    email: "piotrwojciech.polcik@mail.polimi.it"
  license:
    name: "Apache 2.0"
    url: "http://www.apache.org/licenses/LICENSE-2.0.html"
host: "children-association.herokuapp.com"
basePath: "/v1"
tags:
- name: "Services"
  description: "All supported services"
- name: "Events"
  description: "All organized events"
- name: "Persons"
  description: "All volunteers in the organization"
- name: "Locations"
  description: "All locations we operate in"
- name: "Contact"
  description: "Contact operation"
- name: "Newsletters"
  description: "Newsletter signup operation"
- name: "Donations"
  description: "Donate money to charity"
schemes:
- "https"
paths:
  /services:
    get:
      tags:
      - "Services"
      summary: "All available services"
      description: "Returns list of all services"
      operationId: "getServices"
      produces:
      - "application/json"
      parameters: []
      responses:
        "200":
          description: "A collection of services"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Service-list"
        "404":
          description: "Services not found"
      x-swagger-router-controller: "Services"
  /services/{id}:
    get:
      tags:
      - "Services"
      summary: "Find a service by id"
      description: "Returns a service with a given id"
      operationId: "getServiceById"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "id of service to return"
        required: true
        type: "integer"
        default: 1
        format: "int64"
      responses:
        "200":
          description: "A services with the specified id"
          schema:
            $ref: "#/definitions/Service"
        "404":
          description: "Service with this id not found"
      x-swagger-router-controller: "Services"
  /events:
    get:
      tags:
      - "Events"
      summary: "All available events"
      description: "Returns list of all the events"
      operationId: "getEvents"
      produces:
      - "application/json"
      parameters:
      - name: "offset"
        in: "query"
        description: "offset of the number of events to return"
        required: false
        type: "integer"
        default: 0
        minimum: 0
        format: "int64"
      - name: "limit"
        in: "query"
        description: "the number of services to return"
        required: false
        type: "integer"
        default: 8
        maximum: 500
        minimum: 1
        format: "int64"
      - name: "country"
        in: "query"
        description: "country that the events should be filtered on"
        required: false
        type: "string"
      - name: "month"
        in: "query"
        description: "a month to filter the events on"
        required: false
        type: "integer"
        format: "int64"
      responses:
        "200":
          description: "The list of all events"
          schema:
            $ref: "#/definitions/inline_response_200"
        "404":
          description: "Events not found"
      x-swagger-router-controller: "Events"
  /events/{id}:
    get:
      tags:
      - "Events"
      summary: "Find an event by id"
      description: "Returns an event with a given id"
      operationId: "getEventById"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "id of event to return"
        required: true
        type: "integer"
        default: 1
        format: "int64"
      responses:
        "200":
          description: "An event with the specified id"
          schema:
            $ref: "#/definitions/Event"
        "404":
          description: "Event with this id not found"
      x-swagger-router-controller: "Events"
  /persons:
    get:
      tags:
      - "Persons"
      summary: "All available persons"
      description: "Returns list of all the persons"
      operationId: "getPersons"
      produces:
      - "application/json"
      parameters:
      - name: "offset"
        in: "query"
        description: "offset of the number of persons to return"
        required: false
        type: "integer"
        default: 0
        minimum: 0
        format: "int64"
      - name: "limit"
        in: "query"
        description: "the number of persons to return"
        required: false
        type: "integer"
        default: 9
        maximum: 500
        minimum: 1
        format: "int64"
      responses:
        "200":
          description: "The list of all persons"
          schema:
            $ref: "#/definitions/inline_response_200_1"
        "404":
          description: "Persons not found"
      x-swagger-router-controller: "Persons"
  /persons/{id}:
    get:
      tags:
      - "Persons"
      summary: "Find a person by id"
      description: "Returns a person with a given id"
      operationId: "getPersonById"
      produces:
      - "application/json"
      parameters:
      - name: "id"
        in: "path"
        description: "id of person to return"
        required: true
        type: "integer"
        default: 1
        format: "int64"
      responses:
        "200":
          description: "A person with the specified id"
          schema:
            $ref: "#/definitions/Person"
        "404":
          description: "Person with this id not found"
      x-swagger-router-controller: "Persons"
  /locations:
    get:
      tags:
      - "Locations"
      summary: "All available locations"
      description: "Returns list of all the locations"
      operationId: "getLocations"
      produces:
      - "application/json"
      parameters: []
      responses:
        "200":
          description: "The list of all locations"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Location"
        "404":
          description: "Locations not found"
      x-swagger-router-controller: "Locations"
  /contact:
    post:
      tags:
      - "Contact"
      summary: "Send a contact form"
      description: "Receive data that are conversed into an e-mail sent to the website\
        \ contact e-mail address"
      operationId: "sendContactFormPOST"
      consumes:
      - "application/x-www-form-urlencoded"
      - "application/json"
      parameters:
      - name: "email"
        in: "formData"
        required: true
        type: "string"
        default: "example@email.com"
      - name: "name"
        in: "formData"
        required: true
        type: "string"
        default: "John Doe"
      - name: "message"
        in: "formData"
        required: true
        type: "string"
        default: "Hello, nice website!"
      responses:
        "200":
          description: "Message sent successfully"
        "400":
          description: "Bad request"
      x-swagger-router-controller: "Contact"
  /newsletters:
    get:
      tags:
      - "Newsletters"
      summary: "Get all newsletter signups"
      description: "An endpoint that allows to see all newsletter signups."
      operationId: "getNewsletterSignups"
      parameters: []
      responses:
        "200":
          description: "Newsletter signups retrieved succesfully"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Newsletter"
        "404":
          description: "Newsletter signups not found"
      x-swagger-router-controller: "Newsletters"
    post:
      tags:
      - "Newsletters"
      summary: "Newsletter signup"
      description: "An endpoint that allows a visitor to signup to the newsletter."
      operationId: "newsletterSignup"
      consumes:
      - "application/x-www-form-urlencoded"
      - "application/json"
      parameters:
      - name: "email"
        in: "formData"
        required: true
        type: "string"
        default: "example@email.com"
        pattern: "^([a-zA-Z0-9_\\-\\.]+)@([a-zA-Z0-9_\\-\\.]+)\\.([a-zA-Z]{2,5})$"
      responses:
        "200":
          description: "Signed-up to newseletter successfully"
        "400":
          description: "Bad request"
      x-swagger-router-controller: "Newsletters"
  /donations:
    get:
      tags:
      - "Donations"
      summary: "Get all donations"
      description: "An endpoint that allows to see all donations."
      operationId: "getDonations"
      parameters: []
      responses:
        "200":
          description: "Donations signups retrieved succesfully"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Donation"
        "404":
          description: "Donations not found"
      x-swagger-router-controller: "Donations"
    post:
      tags:
      - "Donations"
      summary: "Donation form"
      description: "A really simplified endpoint imitating donation service."
      operationId: "donatePost"
      consumes:
      - "application/x-www-form-urlencoded"
      - "application/json"
      parameters:
      - name: "amount"
        in: "formData"
        required: true
        type: "number"
        default: 300.0
        format: "double"
      - name: "message"
        in: "formData"
        required: true
        type: "string"
        default: "Hope this helps the kids!"
      responses:
        "200":
          description: "Donated successfully"
        "400":
          description: "Bad request"
      x-swagger-router-controller: "Donations"
definitions:
  Service-list:
    type: "object"
    properties:
      id:
        type: "integer"
        format: "int64"
      thumbnail:
        $ref: "#/definitions/Thumbnail"
    xml:
      name: "Service-list"
    example:
      thumbnail:
        thumbnail_desc: "thumbnail_desc"
        thumbnail: "thumbnail"
        id: 6
        title: "title"
      id: 0
  Service:
    type: "object"
    properties:
      id:
        type: "integer"
        format: "int64"
      name:
        type: "string"
      center_activities:
        type: "string"
      description:
        type: "string"
      practical_info:
        type: "string"
      header_photo:
        type: "string"
        format: "uri"
      cta:
        type: "string"
      testimonials:
        type: "array"
        items:
          $ref: "#/definitions/Testimonial"
      events:
        type: "array"
        items:
          $ref: "#/definitions/Event-list"
    xml:
      name: "Service"
    example:
      cta: "cta"
      testimonials:
      - testimonial: "testimonial"
        person_desc: "person_desc"
        photo: "http://example.com/aeiou"
        id: 6
      - testimonial: "testimonial"
        person_desc: "person_desc"
        photo: "http://example.com/aeiou"
        id: 6
      name: "name"
      description: "description"
      header_photo: "http://example.com/aeiou"
      practical_info: "practical_info"
      id: 0
      center_activities: "center_activities"
      events:
      - thumbnail:
          thumbnail_desc: "thumbnail_desc"
          thumbnail: "thumbnail"
          id: 6
          title: "title"
        location:
          country: "country"
          country_flag_icon: "country_flag_icon"
          latitude: 5.637376656633329
          name: "name"
          id: 5
          longitude: 2.3021358869347655
        id: 1
      - thumbnail:
          thumbnail_desc: "thumbnail_desc"
          thumbnail: "thumbnail"
          id: 6
          title: "title"
        location:
          country: "country"
          country_flag_icon: "country_flag_icon"
          latitude: 5.637376656633329
          name: "name"
          id: 5
          longitude: 2.3021358869347655
        id: 1
  Event-list:
    type: "object"
    properties:
      id:
        type: "integer"
        format: "int64"
      thumbnail:
        $ref: "#/definitions/Thumbnail"
      location:
        $ref: "#/definitions/Location"
    xml:
      name: "Event-list"
    example:
      thumbnail:
        thumbnail_desc: "thumbnail_desc"
        thumbnail: "thumbnail"
        id: 6
        title: "title"
      location:
        country: "country"
        country_flag_icon: "country_flag_icon"
        latitude: 5.637376656633329
        name: "name"
        id: 5
        longitude: 2.3021358869347655
      id: 1
  Event:
    type: "object"
    properties:
      id:
        type: "integer"
        format: "int64"
      name:
        type: "string"
      description:
        type: "string"
        format: "uri"
      price:
        type: "number"
        format: "double"
      date_time:
        type: "string"
        format: "date-time"
      location:
        $ref: "#/definitions/Location"
      thumbnail:
        $ref: "#/definitions/Thumbnail"
      manager:
        $ref: "#/definitions/Person-list"
      statistics:
        $ref: "#/definitions/Event_statistics"
      services:
        type: "array"
        items:
          $ref: "#/definitions/Service-list"
      testimonials:
        type: "array"
        items:
          $ref: "#/definitions/Testimonial"
      meta:
        $ref: "#/definitions/Meta"
    xml:
      name: "Event"
    example:
      testimonials:
      - testimonial: "testimonial"
        person_desc: "person_desc"
        photo: "http://example.com/aeiou"
        id: 6
      - testimonial: "testimonial"
        person_desc: "person_desc"
        photo: "http://example.com/aeiou"
        id: 6
      thumbnail:
        thumbnail_desc: "thumbnail_desc"
        thumbnail: "thumbnail"
        id: 6
        title: "title"
      date_time: "2000-01-23T04:56:07.000+00:00"
      manager:
        joining_date: "2000-01-23"
        thumbnail:
          thumbnail_desc: "thumbnail_desc"
          thumbnail: "thumbnail"
          id: 6
          title: "title"
        role: "role"
        id: 1
      price: 6.027456183070403
      meta:
        total_number: 0
      name: "name"
      description: "http://example.com/aeiou"
      location:
        country: "country"
        country_flag_icon: "country_flag_icon"
        latitude: 5.637376656633329
        name: "name"
        id: 5
        longitude: 2.3021358869347655
      id: 0
      services:
      - thumbnail:
          thumbnail_desc: "thumbnail_desc"
          thumbnail: "thumbnail"
          id: 6
          title: "title"
        id: 0
      - thumbnail:
          thumbnail_desc: "thumbnail_desc"
          thumbnail: "thumbnail"
          id: 6
          title: "title"
        id: 0
      statistics:
        amount: 2
        n_contributors: 5
        n_children: 5
  Person-list:
    type: "object"
    properties:
      id:
        type: "integer"
        format: "int64"
      role:
        type: "string"
      joining_date:
        type: "string"
        format: "date"
      thumbnail:
        $ref: "#/definitions/Thumbnail"
    xml:
      name: "Person-list"
    example:
      joining_date: "2000-01-23"
      thumbnail:
        thumbnail_desc: "thumbnail_desc"
        thumbnail: "thumbnail"
        id: 6
        title: "title"
      role: "role"
      id: 1
  Person:
    type: "object"
    properties:
      id:
        type: "integer"
        format: "int64"
      name:
        type: "string"
      picture:
        type: "string"
        format: "uri"
      role:
        type: "string"
      description:
        type: "string"
      joining_date:
        type: "string"
        format: "date"
      experience:
        type: "string"
      location:
        $ref: "#/definitions/Location"
      contact:
        $ref: "#/definitions/Person_contact"
      testimonials:
        type: "array"
        items:
          $ref: "#/definitions/Testimonial"
      services:
        type: "array"
        items:
          $ref: "#/definitions/Service-list"
      thumbnail:
        $ref: "#/definitions/Thumbnail"
      event:
        $ref: "#/definitions/Event-list"
    xml:
      name: "Person"
    example:
      joining_date: "2000-01-23"
      thumbnail:
        thumbnail_desc: "thumbnail_desc"
        thumbnail: "thumbnail"
        id: 6
        title: "title"
      role: "role"
      description: "description"
      services:
      - thumbnail:
          thumbnail_desc: "thumbnail_desc"
          thumbnail: "thumbnail"
          id: 6
          title: "title"
        id: 0
      - thumbnail:
          thumbnail_desc: "thumbnail_desc"
          thumbnail: "thumbnail"
          id: 6
          title: "title"
        id: 0
      experience: "experience"
      picture: "http://example.com/aeiou"
      testimonials:
      - testimonial: "testimonial"
        person_desc: "person_desc"
        photo: "http://example.com/aeiou"
        id: 6
      - testimonial: "testimonial"
        person_desc: "person_desc"
        photo: "http://example.com/aeiou"
        id: 6
      contact:
        phone: "phone"
        starting_hours: "starting_hours"
        ending_hours: "ending_hours"
        email: "email"
      name: "name"
      location:
        country: "country"
        country_flag_icon: "country_flag_icon"
        latitude: 5.637376656633329
        name: "name"
        id: 5
        longitude: 2.3021358869347655
      id: 0
      event:
        thumbnail:
          thumbnail_desc: "thumbnail_desc"
          thumbnail: "thumbnail"
          id: 6
          title: "title"
        location:
          country: "country"
          country_flag_icon: "country_flag_icon"
          latitude: 5.637376656633329
          name: "name"
          id: 5
          longitude: 2.3021358869347655
        id: 1
  Location:
    type: "object"
    properties:
      id:
        type: "integer"
        format: "int64"
      name:
        type: "string"
      country:
        type: "string"
      country_flag_icon:
        type: "string"
        format: "BLOB"
      latitude:
        type: "number"
        format: "double"
      longitude:
        type: "number"
        format: "double"
    xml:
      name: "Location"
    example:
      country: "country"
      country_flag_icon: "country_flag_icon"
      latitude: 5.637376656633329
      name: "name"
      id: 5
      longitude: 2.3021358869347655
  Thumbnail:
    type: "object"
    properties:
      id:
        type: "integer"
        format: "int64"
      title:
        type: "string"
      thumbnail:
        type: "string"
      thumbnail_desc:
        type: "string"
    xml:
      name: "Thumbnail"
    example:
      thumbnail_desc: "thumbnail_desc"
      thumbnail: "thumbnail"
      id: 6
      title: "title"
  Testimonial:
    type: "object"
    properties:
      id:
        type: "integer"
        format: "int64"
      person_desc:
        type: "string"
      testimonial:
        type: "string"
      photo:
        type: "string"
        format: "uri"
    xml:
      name: "Testimonial"
    example:
      testimonial: "testimonial"
      person_desc: "person_desc"
      photo: "http://example.com/aeiou"
      id: 6
  Newsletter:
    type: "object"
    properties:
      id:
        type: "integer"
        format: "int64"
      email:
        type: "string"
      timestamp:
        type: "string"
        format: "date-time"
    example:
      id: 0
      email: "email"
      timestamp: "2000-01-23T04:56:07.000+00:00"
  Donation:
    type: "object"
    properties:
      id:
        type: "integer"
        format: "int64"
      amount:
        type: "number"
        format: "double"
      practical_info:
        type: "string"
      timestamp:
        type: "string"
        format: "date-time"
    example:
      amount: 6.027456183070403
      practical_info: "practical_info"
      id: 0
      timestamp: "2000-01-23T04:56:07.000+00:00"
  Meta:
    type: "object"
    properties:
      total_number:
        type: "integer"
    xml:
      name: "Meta"
    example:
      total_number: 0
  inline_response_200:
    type: "object"
    properties:
      events:
        type: "array"
        items:
          $ref: "#/definitions/Event-list"
      meta:
        $ref: "#/definitions/Meta"
    example:
      meta:
        total_number: 0
      events:
      - thumbnail:
          thumbnail_desc: "thumbnail_desc"
          thumbnail: "thumbnail"
          id: 6
          title: "title"
        location:
          country: "country"
          country_flag_icon: "country_flag_icon"
          latitude: 5.637376656633329
          name: "name"
          id: 5
          longitude: 2.3021358869347655
        id: 1
      - thumbnail:
          thumbnail_desc: "thumbnail_desc"
          thumbnail: "thumbnail"
          id: 6
          title: "title"
        location:
          country: "country"
          country_flag_icon: "country_flag_icon"
          latitude: 5.637376656633329
          name: "name"
          id: 5
          longitude: 2.3021358869347655
        id: 1
  inline_response_200_1:
    type: "object"
    properties:
      persons:
        type: "array"
        items:
          $ref: "#/definitions/Person-list"
      meta:
        $ref: "#/definitions/Meta"
    example:
      persons:
      - joining_date: "2000-01-23"
        thumbnail:
          thumbnail_desc: "thumbnail_desc"
          thumbnail: "thumbnail"
          id: 6
          title: "title"
        role: "role"
        id: 1
      - joining_date: "2000-01-23"
        thumbnail:
          thumbnail_desc: "thumbnail_desc"
          thumbnail: "thumbnail"
          id: 6
          title: "title"
        role: "role"
        id: 1
      meta:
        total_number: 0
  Event_statistics:
    type: "object"
    properties:
      n_children:
        type: "integer"
      n_contributors:
        type: "integer"
      amount:
        type: "integer"
    example:
      amount: 2
      n_contributors: 5
      n_children: 5
  Person_contact:
    type: "object"
    properties:
      email:
        type: "string"
        format: "email"
      phone:
        type: "string"
      starting_hours:
        type: "string"
        description: "the time the person starts work daily"
      ending_hours:
        type: "string"
        description: "the time the person ends work daily"
    example:
      phone: "phone"
      starting_hours: "starting_hours"
      ending_hours: "ending_hours"
      email: "email"
externalDocs:
  description: "Find out more about Swagger"
  url: "http://swagger.io"
